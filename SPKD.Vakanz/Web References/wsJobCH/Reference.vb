'------------------------------------------------------------------------------
' <auto-generated>
'     Dieser Code wurde von einem Tool generiert.
'     Laufzeitversion:4.0.30319.42000
'
'     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
'     der Code erneut generiert wird.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Data
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'Der Quellcode wurde automatisch mit Microsoft.VSDesigner generiert. Version 4.0.30319.42000.
'
Namespace wsJobCH
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="SP_JobsCH_UtilSoap", [Namespace]:="http://asmx.domain.com/wsSPS_services/SP_JobsCH_Util.asmx")>  _
    Partial Public Class SP_JobsCH_Util
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private SaveUserData2WSDbOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetRegionsDataOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetAnstellungDataOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetBerufeDataOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetBerufFachbereichDataOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetBranchenDataOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetPositionDataOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetAgeDataOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetBildungDataOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetLanguageDataOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetLanguageNiveauDataOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = Global.SPKD.Vakanz.My.MySettings.Default.SPKD_Vakanz_wsJobCH_SP_JobsCH_Util
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event SaveUserData2WSDbCompleted As SaveUserData2WSDbCompletedEventHandler
        
        '''<remarks/>
        Public Event GetRegionsDataCompleted As GetRegionsDataCompletedEventHandler
        
        '''<remarks/>
        Public Event GetAnstellungDataCompleted As GetAnstellungDataCompletedEventHandler
        
        '''<remarks/>
        Public Event GetBerufeDataCompleted As GetBerufeDataCompletedEventHandler
        
        '''<remarks/>
        Public Event GetBerufFachbereichDataCompleted As GetBerufFachbereichDataCompletedEventHandler
        
        '''<remarks/>
        Public Event GetBranchenDataCompleted As GetBranchenDataCompletedEventHandler
        
        '''<remarks/>
        Public Event GetPositionDataCompleted As GetPositionDataCompletedEventHandler
        
        '''<remarks/>
        Public Event GetAgeDataCompleted As GetAgeDataCompletedEventHandler
        
        '''<remarks/>
        Public Event GetBildungDataCompleted As GetBildungDataCompletedEventHandler
        
        '''<remarks/>
        Public Event GetLanguageDataCompleted As GetLanguageDataCompletedEventHandler
        
        '''<remarks/>
        Public Event GetLanguageNiveauDataCompleted As GetLanguageNiveauDataCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://asmx.domain.com/wsSPS_services/SP_JobsCH_Util.asmx/SaveUserData2WSDb", RequestNamespace:="http://asmx.domain.com/wsSPS_services/SP_JobsCH_Util.asmx", ResponseNamespace:="http://asmx.domain.com/wsSPS_services/SP_JobsCH_Util.asmx", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function SaveUserData2WSDb(ByVal strUserData As String) As String
            Dim results() As Object = Me.Invoke("SaveUserData2WSDb", New Object() {strUserData})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub SaveUserData2WSDbAsync(ByVal strUserData As String)
            Me.SaveUserData2WSDbAsync(strUserData, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SaveUserData2WSDbAsync(ByVal strUserData As String, ByVal userState As Object)
            If (Me.SaveUserData2WSDbOperationCompleted Is Nothing) Then
                Me.SaveUserData2WSDbOperationCompleted = AddressOf Me.OnSaveUserData2WSDbOperationCompleted
            End If
            Me.InvokeAsync("SaveUserData2WSDb", New Object() {strUserData}, Me.SaveUserData2WSDbOperationCompleted, userState)
        End Sub
        
        Private Sub OnSaveUserData2WSDbOperationCompleted(ByVal arg As Object)
            If (Not (Me.SaveUserData2WSDbCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SaveUserData2WSDbCompleted(Me, New SaveUserData2WSDbCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://asmx.domain.com/wsSPS_services/SP_JobsCH_Util.asmx/GetRegionsData", RequestNamespace:="http://asmx.domain.com/wsSPS_services/SP_JobsCH_Util.asmx", ResponseNamespace:="http://asmx.domain.com/wsSPS_services/SP_JobsCH_Util.asmx", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetRegionsData(ByVal strUserID As String, ByVal strLanguage As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetRegionsData", New Object() {strUserID, strLanguage})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetRegionsDataAsync(ByVal strUserID As String, ByVal strLanguage As String)
            Me.GetRegionsDataAsync(strUserID, strLanguage, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetRegionsDataAsync(ByVal strUserID As String, ByVal strLanguage As String, ByVal userState As Object)
            If (Me.GetRegionsDataOperationCompleted Is Nothing) Then
                Me.GetRegionsDataOperationCompleted = AddressOf Me.OnGetRegionsDataOperationCompleted
            End If
            Me.InvokeAsync("GetRegionsData", New Object() {strUserID, strLanguage}, Me.GetRegionsDataOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetRegionsDataOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetRegionsDataCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetRegionsDataCompleted(Me, New GetRegionsDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://asmx.domain.com/wsSPS_services/SP_JobsCH_Util.asmx/GetAnstellungData", RequestNamespace:="http://asmx.domain.com/wsSPS_services/SP_JobsCH_Util.asmx", ResponseNamespace:="http://asmx.domain.com/wsSPS_services/SP_JobsCH_Util.asmx", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetAnstellungData(ByVal strUserID As String, ByVal strLanguage As String, ByVal strBez As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetAnstellungData", New Object() {strUserID, strLanguage, strBez})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetAnstellungDataAsync(ByVal strUserID As String, ByVal strLanguage As String, ByVal strBez As String)
            Me.GetAnstellungDataAsync(strUserID, strLanguage, strBez, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetAnstellungDataAsync(ByVal strUserID As String, ByVal strLanguage As String, ByVal strBez As String, ByVal userState As Object)
            If (Me.GetAnstellungDataOperationCompleted Is Nothing) Then
                Me.GetAnstellungDataOperationCompleted = AddressOf Me.OnGetAnstellungDataOperationCompleted
            End If
            Me.InvokeAsync("GetAnstellungData", New Object() {strUserID, strLanguage, strBez}, Me.GetAnstellungDataOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetAnstellungDataOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetAnstellungDataCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetAnstellungDataCompleted(Me, New GetAnstellungDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://asmx.domain.com/wsSPS_services/SP_JobsCH_Util.asmx/GetBerufeData", RequestNamespace:="http://asmx.domain.com/wsSPS_services/SP_JobsCH_Util.asmx", ResponseNamespace:="http://asmx.domain.com/wsSPS_services/SP_JobsCH_Util.asmx", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetBerufeData(ByVal strUserID As String, ByVal strLanguage As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetBerufeData", New Object() {strUserID, strLanguage})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetBerufeDataAsync(ByVal strUserID As String, ByVal strLanguage As String)
            Me.GetBerufeDataAsync(strUserID, strLanguage, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetBerufeDataAsync(ByVal strUserID As String, ByVal strLanguage As String, ByVal userState As Object)
            If (Me.GetBerufeDataOperationCompleted Is Nothing) Then
                Me.GetBerufeDataOperationCompleted = AddressOf Me.OnGetBerufeDataOperationCompleted
            End If
            Me.InvokeAsync("GetBerufeData", New Object() {strUserID, strLanguage}, Me.GetBerufeDataOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetBerufeDataOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetBerufeDataCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetBerufeDataCompleted(Me, New GetBerufeDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://asmx.domain.com/wsSPS_services/SP_JobsCH_Util.asmx/GetBerufFachbereich"& _ 
            "Data", RequestNamespace:="http://asmx.domain.com/wsSPS_services/SP_JobsCH_Util.asmx", ResponseNamespace:="http://asmx.domain.com/wsSPS_services/SP_JobsCH_Util.asmx", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetBerufFachbereichData(ByVal strUserID As String, ByVal iID_Parent As Integer, ByVal strLanguage As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetBerufFachbereichData", New Object() {strUserID, iID_Parent, strLanguage})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetBerufFachbereichDataAsync(ByVal strUserID As String, ByVal iID_Parent As Integer, ByVal strLanguage As String)
            Me.GetBerufFachbereichDataAsync(strUserID, iID_Parent, strLanguage, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetBerufFachbereichDataAsync(ByVal strUserID As String, ByVal iID_Parent As Integer, ByVal strLanguage As String, ByVal userState As Object)
            If (Me.GetBerufFachbereichDataOperationCompleted Is Nothing) Then
                Me.GetBerufFachbereichDataOperationCompleted = AddressOf Me.OnGetBerufFachbereichDataOperationCompleted
            End If
            Me.InvokeAsync("GetBerufFachbereichData", New Object() {strUserID, iID_Parent, strLanguage}, Me.GetBerufFachbereichDataOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetBerufFachbereichDataOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetBerufFachbereichDataCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetBerufFachbereichDataCompleted(Me, New GetBerufFachbereichDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://asmx.domain.com/wsSPS_services/SP_JobsCH_Util.asmx/GetBranchenData", RequestNamespace:="http://asmx.domain.com/wsSPS_services/SP_JobsCH_Util.asmx", ResponseNamespace:="http://asmx.domain.com/wsSPS_services/SP_JobsCH_Util.asmx", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetBranchenData(ByVal strUserID As String, ByVal strLanguage As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetBranchenData", New Object() {strUserID, strLanguage})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetBranchenDataAsync(ByVal strUserID As String, ByVal strLanguage As String)
            Me.GetBranchenDataAsync(strUserID, strLanguage, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetBranchenDataAsync(ByVal strUserID As String, ByVal strLanguage As String, ByVal userState As Object)
            If (Me.GetBranchenDataOperationCompleted Is Nothing) Then
                Me.GetBranchenDataOperationCompleted = AddressOf Me.OnGetBranchenDataOperationCompleted
            End If
            Me.InvokeAsync("GetBranchenData", New Object() {strUserID, strLanguage}, Me.GetBranchenDataOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetBranchenDataOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetBranchenDataCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetBranchenDataCompleted(Me, New GetBranchenDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://asmx.domain.com/wsSPS_services/SP_JobsCH_Util.asmx/GetPositionData", RequestNamespace:="http://asmx.domain.com/wsSPS_services/SP_JobsCH_Util.asmx", ResponseNamespace:="http://asmx.domain.com/wsSPS_services/SP_JobsCH_Util.asmx", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetPositionData(ByVal strUserID As String, ByVal strLanguage As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetPositionData", New Object() {strUserID, strLanguage})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetPositionDataAsync(ByVal strUserID As String, ByVal strLanguage As String)
            Me.GetPositionDataAsync(strUserID, strLanguage, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetPositionDataAsync(ByVal strUserID As String, ByVal strLanguage As String, ByVal userState As Object)
            If (Me.GetPositionDataOperationCompleted Is Nothing) Then
                Me.GetPositionDataOperationCompleted = AddressOf Me.OnGetPositionDataOperationCompleted
            End If
            Me.InvokeAsync("GetPositionData", New Object() {strUserID, strLanguage}, Me.GetPositionDataOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetPositionDataOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetPositionDataCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetPositionDataCompleted(Me, New GetPositionDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://asmx.domain.com/wsSPS_services/SP_JobsCH_Util.asmx/GetAgeData", RequestNamespace:="http://asmx.domain.com/wsSPS_services/SP_JobsCH_Util.asmx", ResponseNamespace:="http://asmx.domain.com/wsSPS_services/SP_JobsCH_Util.asmx", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetAgeData(ByVal strUserID As String, ByVal strLanguage As String, ByVal strBez As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetAgeData", New Object() {strUserID, strLanguage, strBez})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetAgeDataAsync(ByVal strUserID As String, ByVal strLanguage As String, ByVal strBez As String)
            Me.GetAgeDataAsync(strUserID, strLanguage, strBez, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetAgeDataAsync(ByVal strUserID As String, ByVal strLanguage As String, ByVal strBez As String, ByVal userState As Object)
            If (Me.GetAgeDataOperationCompleted Is Nothing) Then
                Me.GetAgeDataOperationCompleted = AddressOf Me.OnGetAgeDataOperationCompleted
            End If
            Me.InvokeAsync("GetAgeData", New Object() {strUserID, strLanguage, strBez}, Me.GetAgeDataOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetAgeDataOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetAgeDataCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetAgeDataCompleted(Me, New GetAgeDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://asmx.domain.com/wsSPS_services/SP_JobsCH_Util.asmx/GetBildungData", RequestNamespace:="http://asmx.domain.com/wsSPS_services/SP_JobsCH_Util.asmx", ResponseNamespace:="http://asmx.domain.com/wsSPS_services/SP_JobsCH_Util.asmx", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetBildungData(ByVal strUserID As String, ByVal strLanguage As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetBildungData", New Object() {strUserID, strLanguage})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetBildungDataAsync(ByVal strUserID As String, ByVal strLanguage As String)
            Me.GetBildungDataAsync(strUserID, strLanguage, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetBildungDataAsync(ByVal strUserID As String, ByVal strLanguage As String, ByVal userState As Object)
            If (Me.GetBildungDataOperationCompleted Is Nothing) Then
                Me.GetBildungDataOperationCompleted = AddressOf Me.OnGetBildungDataOperationCompleted
            End If
            Me.InvokeAsync("GetBildungData", New Object() {strUserID, strLanguage}, Me.GetBildungDataOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetBildungDataOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetBildungDataCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetBildungDataCompleted(Me, New GetBildungDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://asmx.domain.com/wsSPS_services/SP_JobsCH_Util.asmx/GetLanguageData", RequestNamespace:="http://asmx.domain.com/wsSPS_services/SP_JobsCH_Util.asmx", ResponseNamespace:="http://asmx.domain.com/wsSPS_services/SP_JobsCH_Util.asmx", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetLanguageData(ByVal strUserID As String, ByVal strLanguage As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetLanguageData", New Object() {strUserID, strLanguage})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetLanguageDataAsync(ByVal strUserID As String, ByVal strLanguage As String)
            Me.GetLanguageDataAsync(strUserID, strLanguage, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetLanguageDataAsync(ByVal strUserID As String, ByVal strLanguage As String, ByVal userState As Object)
            If (Me.GetLanguageDataOperationCompleted Is Nothing) Then
                Me.GetLanguageDataOperationCompleted = AddressOf Me.OnGetLanguageDataOperationCompleted
            End If
            Me.InvokeAsync("GetLanguageData", New Object() {strUserID, strLanguage}, Me.GetLanguageDataOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetLanguageDataOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetLanguageDataCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetLanguageDataCompleted(Me, New GetLanguageDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://asmx.domain.com/wsSPS_services/SP_JobsCH_Util.asmx/GetLanguageNiveauDa"& _ 
            "ta", RequestNamespace:="http://asmx.domain.com/wsSPS_services/SP_JobsCH_Util.asmx", ResponseNamespace:="http://asmx.domain.com/wsSPS_services/SP_JobsCH_Util.asmx", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetLanguageNiveauData(ByVal strUserID As String, ByVal strLanguage As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetLanguageNiveauData", New Object() {strUserID, strLanguage})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetLanguageNiveauDataAsync(ByVal strUserID As String, ByVal strLanguage As String)
            Me.GetLanguageNiveauDataAsync(strUserID, strLanguage, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetLanguageNiveauDataAsync(ByVal strUserID As String, ByVal strLanguage As String, ByVal userState As Object)
            If (Me.GetLanguageNiveauDataOperationCompleted Is Nothing) Then
                Me.GetLanguageNiveauDataOperationCompleted = AddressOf Me.OnGetLanguageNiveauDataOperationCompleted
            End If
            Me.InvokeAsync("GetLanguageNiveauData", New Object() {strUserID, strLanguage}, Me.GetLanguageNiveauDataOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetLanguageNiveauDataOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetLanguageNiveauDataCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetLanguageNiveauDataCompleted(Me, New GetLanguageNiveauDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub SaveUserData2WSDbCompletedEventHandler(ByVal sender As Object, ByVal e As SaveUserData2WSDbCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SaveUserData2WSDbCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub GetRegionsDataCompletedEventHandler(ByVal sender As Object, ByVal e As GetRegionsDataCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetRegionsDataCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub GetAnstellungDataCompletedEventHandler(ByVal sender As Object, ByVal e As GetAnstellungDataCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetAnstellungDataCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub GetBerufeDataCompletedEventHandler(ByVal sender As Object, ByVal e As GetBerufeDataCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetBerufeDataCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub GetBerufFachbereichDataCompletedEventHandler(ByVal sender As Object, ByVal e As GetBerufFachbereichDataCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetBerufFachbereichDataCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub GetBranchenDataCompletedEventHandler(ByVal sender As Object, ByVal e As GetBranchenDataCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetBranchenDataCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub GetPositionDataCompletedEventHandler(ByVal sender As Object, ByVal e As GetPositionDataCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetPositionDataCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub GetAgeDataCompletedEventHandler(ByVal sender As Object, ByVal e As GetAgeDataCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetAgeDataCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub GetBildungDataCompletedEventHandler(ByVal sender As Object, ByVal e As GetBildungDataCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetBildungDataCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub GetLanguageDataCompletedEventHandler(ByVal sender As Object, ByVal e As GetLanguageDataCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetLanguageDataCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub GetLanguageNiveauDataCompletedEventHandler(ByVal sender As Object, ByVal e As GetLanguageNiveauDataCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetLanguageNiveauDataCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
End Namespace
