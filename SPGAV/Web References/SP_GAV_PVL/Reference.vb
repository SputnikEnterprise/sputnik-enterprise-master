'------------------------------------------------------------------------------
' <auto-generated>
'     Dieser Code wurde von einem Tool generiert.
'     Laufzeitversion:4.0.30319.42000
'
'     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
'     der Code erneut generiert wird.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Data
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'Der Quellcode wurde automatisch mit Microsoft.VSDesigner generiert. Version 4.0.30319.42000.
'
Namespace SP_GAV_PVL
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="SPGAV2012DataSoap", [Namespace]:="http://asmx.domain.com/spgav_services/SPGAV2012Data.asmx")>  _
    Partial Public Class SPGAV2012Data
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private GetGruppe0ByKantonOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetGruppe0ByKanton_DSOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetPVLAnhang1BerufeOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetPVLBerufWarningOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetGAVCategoryNames_DSOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetGAVCategoryNamesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetGAVCategoryValuesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetGAVCategoryValuesWithLanguageOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetGAVCategoryValuesWithBaseValueOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetGAVCalculationValueOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetGAVCriterionValueOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetGAVCriterionValueByIDCriterionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetGAVTaxonomyEntryValueOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetGAVVersionValueOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = Global.SPGAV.My.MySettings.Default.SPGAV_SP_GAV_PVL_SPGAV2012Data
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event GetGruppe0ByKantonCompleted As GetGruppe0ByKantonCompletedEventHandler
        
        '''<remarks/>
        Public Event GetGruppe0ByKanton_DSCompleted As GetGruppe0ByKanton_DSCompletedEventHandler
        
        '''<remarks/>
        Public Event GetPVLAnhang1BerufeCompleted As GetPVLAnhang1BerufeCompletedEventHandler
        
        '''<remarks/>
        Public Event GetPVLBerufWarningCompleted As GetPVLBerufWarningCompletedEventHandler
        
        '''<remarks/>
        Public Event GetGAVCategoryNames_DSCompleted As GetGAVCategoryNames_DSCompletedEventHandler
        
        '''<remarks/>
        Public Event GetGAVCategoryNamesCompleted As GetGAVCategoryNamesCompletedEventHandler
        
        '''<remarks/>
        Public Event GetGAVCategoryValuesCompleted As GetGAVCategoryValuesCompletedEventHandler
        
        '''<remarks/>
        Public Event GetGAVCategoryValuesWithLanguageCompleted As GetGAVCategoryValuesWithLanguageCompletedEventHandler
        
        '''<remarks/>
        Public Event GetGAVCategoryValuesWithBaseValueCompleted As GetGAVCategoryValuesWithBaseValueCompletedEventHandler
        
        '''<remarks/>
        Public Event GetGAVCalculationValueCompleted As GetGAVCalculationValueCompletedEventHandler
        
        '''<remarks/>
        Public Event GetGAVCriterionValueCompleted As GetGAVCriterionValueCompletedEventHandler
        
        '''<remarks/>
        Public Event GetGAVCriterionValueByIDCriterionCompleted As GetGAVCriterionValueByIDCriterionCompletedEventHandler
        
        '''<remarks/>
        Public Event GetGAVTaxonomyEntryValueCompleted As GetGAVTaxonomyEntryValueCompletedEventHandler
        
        '''<remarks/>
        Public Event GetGAVVersionValueCompleted As GetGAVVersionValueCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://asmx.domain.com/spgav_services/SPGAV2012Data.asmx/GetGruppe0ByKanton", RequestNamespace:="http://asmx.domain.com/spgav_services/SPGAV2012Data.asmx", ResponseNamespace:="http://asmx.domain.com/spgav_services/SPGAV2012Data.asmx", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetGruppe0ByKanton(ByVal strUserID As String, ByVal strGAVKanton As String, ByVal strPLZ As String, ByVal strLanguage As String) As String()
            Dim results() As Object = Me.Invoke("GetGruppe0ByKanton", New Object() {strUserID, strGAVKanton, strPLZ, strLanguage})
            Return CType(results(0),String())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetGruppe0ByKantonAsync(ByVal strUserID As String, ByVal strGAVKanton As String, ByVal strPLZ As String, ByVal strLanguage As String)
            Me.GetGruppe0ByKantonAsync(strUserID, strGAVKanton, strPLZ, strLanguage, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetGruppe0ByKantonAsync(ByVal strUserID As String, ByVal strGAVKanton As String, ByVal strPLZ As String, ByVal strLanguage As String, ByVal userState As Object)
            If (Me.GetGruppe0ByKantonOperationCompleted Is Nothing) Then
                Me.GetGruppe0ByKantonOperationCompleted = AddressOf Me.OnGetGruppe0ByKantonOperationCompleted
            End If
            Me.InvokeAsync("GetGruppe0ByKanton", New Object() {strUserID, strGAVKanton, strPLZ, strLanguage}, Me.GetGruppe0ByKantonOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetGruppe0ByKantonOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetGruppe0ByKantonCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetGruppe0ByKantonCompleted(Me, New GetGruppe0ByKantonCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://asmx.domain.com/spgav_services/SPGAV2012Data.asmx/GetGruppe0ByKanton_D"& _ 
            "S", RequestNamespace:="http://asmx.domain.com/spgav_services/SPGAV2012Data.asmx", ResponseNamespace:="http://asmx.domain.com/spgav_services/SPGAV2012Data.asmx", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetGruppe0ByKanton_DS(ByVal strUserID As String, ByVal strGAVKanton As String, ByVal strPLZ As String, ByVal strLanguage As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetGruppe0ByKanton_DS", New Object() {strUserID, strGAVKanton, strPLZ, strLanguage})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetGruppe0ByKanton_DSAsync(ByVal strUserID As String, ByVal strGAVKanton As String, ByVal strPLZ As String, ByVal strLanguage As String)
            Me.GetGruppe0ByKanton_DSAsync(strUserID, strGAVKanton, strPLZ, strLanguage, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetGruppe0ByKanton_DSAsync(ByVal strUserID As String, ByVal strGAVKanton As String, ByVal strPLZ As String, ByVal strLanguage As String, ByVal userState As Object)
            If (Me.GetGruppe0ByKanton_DSOperationCompleted Is Nothing) Then
                Me.GetGruppe0ByKanton_DSOperationCompleted = AddressOf Me.OnGetGruppe0ByKanton_DSOperationCompleted
            End If
            Me.InvokeAsync("GetGruppe0ByKanton_DS", New Object() {strUserID, strGAVKanton, strPLZ, strLanguage}, Me.GetGruppe0ByKanton_DSOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetGruppe0ByKanton_DSOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetGruppe0ByKanton_DSCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetGruppe0ByKanton_DSCompleted(Me, New GetGruppe0ByKanton_DSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://asmx.domain.com/spgav_services/SPGAV2012Data.asmx/GetPVLAnhang1Berufe", RequestNamespace:="http://asmx.domain.com/spgav_services/SPGAV2012Data.asmx", ResponseNamespace:="http://asmx.domain.com/spgav_services/SPGAV2012Data.asmx", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetPVLAnhang1Berufe(ByVal strUserID As String) As String()
            Dim results() As Object = Me.Invoke("GetPVLAnhang1Berufe", New Object() {strUserID})
            Return CType(results(0),String())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetPVLAnhang1BerufeAsync(ByVal strUserID As String)
            Me.GetPVLAnhang1BerufeAsync(strUserID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetPVLAnhang1BerufeAsync(ByVal strUserID As String, ByVal userState As Object)
            If (Me.GetPVLAnhang1BerufeOperationCompleted Is Nothing) Then
                Me.GetPVLAnhang1BerufeOperationCompleted = AddressOf Me.OnGetPVLAnhang1BerufeOperationCompleted
            End If
            Me.InvokeAsync("GetPVLAnhang1Berufe", New Object() {strUserID}, Me.GetPVLAnhang1BerufeOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetPVLAnhang1BerufeOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetPVLAnhang1BerufeCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetPVLAnhang1BerufeCompleted(Me, New GetPVLAnhang1BerufeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://asmx.domain.com/spgav_services/SPGAV2012Data.asmx/GetPVLBerufWarning", RequestNamespace:="http://asmx.domain.com/spgav_services/SPGAV2012Data.asmx", ResponseNamespace:="http://asmx.domain.com/spgav_services/SPGAV2012Data.asmx", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetPVLBerufWarning(ByVal iGAVNr As Integer) As String
            Dim results() As Object = Me.Invoke("GetPVLBerufWarning", New Object() {iGAVNr})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetPVLBerufWarningAsync(ByVal iGAVNr As Integer)
            Me.GetPVLBerufWarningAsync(iGAVNr, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetPVLBerufWarningAsync(ByVal iGAVNr As Integer, ByVal userState As Object)
            If (Me.GetPVLBerufWarningOperationCompleted Is Nothing) Then
                Me.GetPVLBerufWarningOperationCompleted = AddressOf Me.OnGetPVLBerufWarningOperationCompleted
            End If
            Me.InvokeAsync("GetPVLBerufWarning", New Object() {iGAVNr}, Me.GetPVLBerufWarningOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetPVLBerufWarningOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetPVLBerufWarningCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetPVLBerufWarningCompleted(Me, New GetPVLBerufWarningCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://asmx.domain.com/spgav_services/SPGAV2012Data.asmx/GetGAVCategoryNames_"& _ 
            "DS", RequestNamespace:="http://asmx.domain.com/spgav_services/SPGAV2012Data.asmx", ResponseNamespace:="http://asmx.domain.com/spgav_services/SPGAV2012Data.asmx", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetGAVCategoryNames_DS(ByVal strUserID As String, ByVal ID_Meta As Integer, ByVal strLanguage As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetGAVCategoryNames_DS", New Object() {strUserID, ID_Meta, strLanguage})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetGAVCategoryNames_DSAsync(ByVal strUserID As String, ByVal ID_Meta As Integer, ByVal strLanguage As String)
            Me.GetGAVCategoryNames_DSAsync(strUserID, ID_Meta, strLanguage, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetGAVCategoryNames_DSAsync(ByVal strUserID As String, ByVal ID_Meta As Integer, ByVal strLanguage As String, ByVal userState As Object)
            If (Me.GetGAVCategoryNames_DSOperationCompleted Is Nothing) Then
                Me.GetGAVCategoryNames_DSOperationCompleted = AddressOf Me.OnGetGAVCategoryNames_DSOperationCompleted
            End If
            Me.InvokeAsync("GetGAVCategoryNames_DS", New Object() {strUserID, ID_Meta, strLanguage}, Me.GetGAVCategoryNames_DSOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetGAVCategoryNames_DSOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetGAVCategoryNames_DSCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetGAVCategoryNames_DSCompleted(Me, New GetGAVCategoryNames_DSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://asmx.domain.com/spgav_services/SPGAV2012Data.asmx/GetGAVCategoryNames", RequestNamespace:="http://asmx.domain.com/spgav_services/SPGAV2012Data.asmx", ResponseNamespace:="http://asmx.domain.com/spgav_services/SPGAV2012Data.asmx", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetGAVCategoryNames(ByVal strUserID As String, ByVal ID_Meta As Integer, ByVal strLanguage As String) As String()
            Dim results() As Object = Me.Invoke("GetGAVCategoryNames", New Object() {strUserID, ID_Meta, strLanguage})
            Return CType(results(0),String())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetGAVCategoryNamesAsync(ByVal strUserID As String, ByVal ID_Meta As Integer, ByVal strLanguage As String)
            Me.GetGAVCategoryNamesAsync(strUserID, ID_Meta, strLanguage, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetGAVCategoryNamesAsync(ByVal strUserID As String, ByVal ID_Meta As Integer, ByVal strLanguage As String, ByVal userState As Object)
            If (Me.GetGAVCategoryNamesOperationCompleted Is Nothing) Then
                Me.GetGAVCategoryNamesOperationCompleted = AddressOf Me.OnGetGAVCategoryNamesOperationCompleted
            End If
            Me.InvokeAsync("GetGAVCategoryNames", New Object() {strUserID, ID_Meta, strLanguage}, Me.GetGAVCategoryNamesOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetGAVCategoryNamesOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetGAVCategoryNamesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetGAVCategoryNamesCompleted(Me, New GetGAVCategoryNamesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://asmx.domain.com/spgav_services/SPGAV2012Data.asmx/GetGAVCategoryValues"& _ 
            "", RequestNamespace:="http://asmx.domain.com/spgav_services/SPGAV2012Data.asmx", ResponseNamespace:="http://asmx.domain.com/spgav_services/SPGAV2012Data.asmx", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetGAVCategoryValues(ByVal strUserID As String, ByVal ID_Category As Integer) As String()
            Dim results() As Object = Me.Invoke("GetGAVCategoryValues", New Object() {strUserID, ID_Category})
            Return CType(results(0),String())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetGAVCategoryValuesAsync(ByVal strUserID As String, ByVal ID_Category As Integer)
            Me.GetGAVCategoryValuesAsync(strUserID, ID_Category, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetGAVCategoryValuesAsync(ByVal strUserID As String, ByVal ID_Category As Integer, ByVal userState As Object)
            If (Me.GetGAVCategoryValuesOperationCompleted Is Nothing) Then
                Me.GetGAVCategoryValuesOperationCompleted = AddressOf Me.OnGetGAVCategoryValuesOperationCompleted
            End If
            Me.InvokeAsync("GetGAVCategoryValues", New Object() {strUserID, ID_Category}, Me.GetGAVCategoryValuesOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetGAVCategoryValuesOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetGAVCategoryValuesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetGAVCategoryValuesCompleted(Me, New GetGAVCategoryValuesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://asmx.domain.com/spgav_services/SPGAV2012Data.asmx/GetGAVCategoryValues"& _ 
            "WithLanguage", RequestNamespace:="http://asmx.domain.com/spgav_services/SPGAV2012Data.asmx", ResponseNamespace:="http://asmx.domain.com/spgav_services/SPGAV2012Data.asmx", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetGAVCategoryValuesWithLanguage(ByVal strUserID As String, ByVal ID_Category As Integer, ByVal strLanguage As String) As String()
            Dim results() As Object = Me.Invoke("GetGAVCategoryValuesWithLanguage", New Object() {strUserID, ID_Category, strLanguage})
            Return CType(results(0),String())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetGAVCategoryValuesWithLanguageAsync(ByVal strUserID As String, ByVal ID_Category As Integer, ByVal strLanguage As String)
            Me.GetGAVCategoryValuesWithLanguageAsync(strUserID, ID_Category, strLanguage, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetGAVCategoryValuesWithLanguageAsync(ByVal strUserID As String, ByVal ID_Category As Integer, ByVal strLanguage As String, ByVal userState As Object)
            If (Me.GetGAVCategoryValuesWithLanguageOperationCompleted Is Nothing) Then
                Me.GetGAVCategoryValuesWithLanguageOperationCompleted = AddressOf Me.OnGetGAVCategoryValuesWithLanguageOperationCompleted
            End If
            Me.InvokeAsync("GetGAVCategoryValuesWithLanguage", New Object() {strUserID, ID_Category, strLanguage}, Me.GetGAVCategoryValuesWithLanguageOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetGAVCategoryValuesWithLanguageOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetGAVCategoryValuesWithLanguageCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetGAVCategoryValuesWithLanguageCompleted(Me, New GetGAVCategoryValuesWithLanguageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://asmx.domain.com/spgav_services/SPGAV2012Data.asmx/GetGAVCategoryValues"& _ 
            "WithBaseValue", RequestNamespace:="http://asmx.domain.com/spgav_services/SPGAV2012Data.asmx", ResponseNamespace:="http://asmx.domain.com/spgav_services/SPGAV2012Data.asmx", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetGAVCategoryValuesWithBaseValue(ByVal strUserID As String, ByVal ID_Category As Integer, ByVal ID_BaseCategoryValue As Integer, ByVal strLanguage As String) As String()
            Dim results() As Object = Me.Invoke("GetGAVCategoryValuesWithBaseValue", New Object() {strUserID, ID_Category, ID_BaseCategoryValue, strLanguage})
            Return CType(results(0),String())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetGAVCategoryValuesWithBaseValueAsync(ByVal strUserID As String, ByVal ID_Category As Integer, ByVal ID_BaseCategoryValue As Integer, ByVal strLanguage As String)
            Me.GetGAVCategoryValuesWithBaseValueAsync(strUserID, ID_Category, ID_BaseCategoryValue, strLanguage, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetGAVCategoryValuesWithBaseValueAsync(ByVal strUserID As String, ByVal ID_Category As Integer, ByVal ID_BaseCategoryValue As Integer, ByVal strLanguage As String, ByVal userState As Object)
            If (Me.GetGAVCategoryValuesWithBaseValueOperationCompleted Is Nothing) Then
                Me.GetGAVCategoryValuesWithBaseValueOperationCompleted = AddressOf Me.OnGetGAVCategoryValuesWithBaseValueOperationCompleted
            End If
            Me.InvokeAsync("GetGAVCategoryValuesWithBaseValue", New Object() {strUserID, ID_Category, ID_BaseCategoryValue, strLanguage}, Me.GetGAVCategoryValuesWithBaseValueOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetGAVCategoryValuesWithBaseValueOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetGAVCategoryValuesWithBaseValueCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetGAVCategoryValuesWithBaseValueCompleted(Me, New GetGAVCategoryValuesWithBaseValueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://asmx.domain.com/spgav_services/SPGAV2012Data.asmx/GetGAVCalculationVal"& _ 
            "ue", RequestNamespace:="http://asmx.domain.com/spgav_services/SPGAV2012Data.asmx", ResponseNamespace:="http://asmx.domain.com/spgav_services/SPGAV2012Data.asmx", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetGAVCalculationValue(ByVal strUserID As String, ByVal strID_CategoryValues As String) As String()
            Dim results() As Object = Me.Invoke("GetGAVCalculationValue", New Object() {strUserID, strID_CategoryValues})
            Return CType(results(0),String())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetGAVCalculationValueAsync(ByVal strUserID As String, ByVal strID_CategoryValues As String)
            Me.GetGAVCalculationValueAsync(strUserID, strID_CategoryValues, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetGAVCalculationValueAsync(ByVal strUserID As String, ByVal strID_CategoryValues As String, ByVal userState As Object)
            If (Me.GetGAVCalculationValueOperationCompleted Is Nothing) Then
                Me.GetGAVCalculationValueOperationCompleted = AddressOf Me.OnGetGAVCalculationValueOperationCompleted
            End If
            Me.InvokeAsync("GetGAVCalculationValue", New Object() {strUserID, strID_CategoryValues}, Me.GetGAVCalculationValueOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetGAVCalculationValueOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetGAVCalculationValueCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetGAVCalculationValueCompleted(Me, New GetGAVCalculationValueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://asmx.domain.com/spgav_services/SPGAV2012Data.asmx/GetGAVCriterionValue"& _ 
            "", RequestNamespace:="http://asmx.domain.com/spgav_services/SPGAV2012Data.asmx", ResponseNamespace:="http://asmx.domain.com/spgav_services/SPGAV2012Data.asmx", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetGAVCriterionValue(ByVal strUserID As String, ByVal ID_Meta As Integer, ByVal strLanguage As String) As String()
            Dim results() As Object = Me.Invoke("GetGAVCriterionValue", New Object() {strUserID, ID_Meta, strLanguage})
            Return CType(results(0),String())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetGAVCriterionValueAsync(ByVal strUserID As String, ByVal ID_Meta As Integer, ByVal strLanguage As String)
            Me.GetGAVCriterionValueAsync(strUserID, ID_Meta, strLanguage, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetGAVCriterionValueAsync(ByVal strUserID As String, ByVal ID_Meta As Integer, ByVal strLanguage As String, ByVal userState As Object)
            If (Me.GetGAVCriterionValueOperationCompleted Is Nothing) Then
                Me.GetGAVCriterionValueOperationCompleted = AddressOf Me.OnGetGAVCriterionValueOperationCompleted
            End If
            Me.InvokeAsync("GetGAVCriterionValue", New Object() {strUserID, ID_Meta, strLanguage}, Me.GetGAVCriterionValueOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetGAVCriterionValueOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetGAVCriterionValueCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetGAVCriterionValueCompleted(Me, New GetGAVCriterionValueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://asmx.domain.com/spgav_services/SPGAV2012Data.asmx/GetGAVCriterionValue"& _ 
            "ByIDCriterion", RequestNamespace:="http://asmx.domain.com/spgav_services/SPGAV2012Data.asmx", ResponseNamespace:="http://asmx.domain.com/spgav_services/SPGAV2012Data.asmx", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetGAVCriterionValueByIDCriterion(ByVal strUserID As String, ByVal ID_Criterion As Integer, ByVal strLanguage As String) As String()
            Dim results() As Object = Me.Invoke("GetGAVCriterionValueByIDCriterion", New Object() {strUserID, ID_Criterion, strLanguage})
            Return CType(results(0),String())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetGAVCriterionValueByIDCriterionAsync(ByVal strUserID As String, ByVal ID_Criterion As Integer, ByVal strLanguage As String)
            Me.GetGAVCriterionValueByIDCriterionAsync(strUserID, ID_Criterion, strLanguage, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetGAVCriterionValueByIDCriterionAsync(ByVal strUserID As String, ByVal ID_Criterion As Integer, ByVal strLanguage As String, ByVal userState As Object)
            If (Me.GetGAVCriterionValueByIDCriterionOperationCompleted Is Nothing) Then
                Me.GetGAVCriterionValueByIDCriterionOperationCompleted = AddressOf Me.OnGetGAVCriterionValueByIDCriterionOperationCompleted
            End If
            Me.InvokeAsync("GetGAVCriterionValueByIDCriterion", New Object() {strUserID, ID_Criterion, strLanguage}, Me.GetGAVCriterionValueByIDCriterionOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetGAVCriterionValueByIDCriterionOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetGAVCriterionValueByIDCriterionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetGAVCriterionValueByIDCriterionCompleted(Me, New GetGAVCriterionValueByIDCriterionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://asmx.domain.com/spgav_services/SPGAV2012Data.asmx/GetGAVTaxonomyEntryV"& _ 
            "alue", RequestNamespace:="http://asmx.domain.com/spgav_services/SPGAV2012Data.asmx", ResponseNamespace:="http://asmx.domain.com/spgav_services/SPGAV2012Data.asmx", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetGAVTaxonomyEntryValue(ByVal strUserID As String, ByVal ID_Meta As Integer) As String()
            Dim results() As Object = Me.Invoke("GetGAVTaxonomyEntryValue", New Object() {strUserID, ID_Meta})
            Return CType(results(0),String())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetGAVTaxonomyEntryValueAsync(ByVal strUserID As String, ByVal ID_Meta As Integer)
            Me.GetGAVTaxonomyEntryValueAsync(strUserID, ID_Meta, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetGAVTaxonomyEntryValueAsync(ByVal strUserID As String, ByVal ID_Meta As Integer, ByVal userState As Object)
            If (Me.GetGAVTaxonomyEntryValueOperationCompleted Is Nothing) Then
                Me.GetGAVTaxonomyEntryValueOperationCompleted = AddressOf Me.OnGetGAVTaxonomyEntryValueOperationCompleted
            End If
            Me.InvokeAsync("GetGAVTaxonomyEntryValue", New Object() {strUserID, ID_Meta}, Me.GetGAVTaxonomyEntryValueOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetGAVTaxonomyEntryValueOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetGAVTaxonomyEntryValueCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetGAVTaxonomyEntryValueCompleted(Me, New GetGAVTaxonomyEntryValueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://asmx.domain.com/spgav_services/SPGAV2012Data.asmx/GetGAVVersionValue", RequestNamespace:="http://asmx.domain.com/spgav_services/SPGAV2012Data.asmx", ResponseNamespace:="http://asmx.domain.com/spgav_services/SPGAV2012Data.asmx", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetGAVVersionValue(ByVal strUserID As String, ByVal iGAVNumber As Integer) As String()
            Dim results() As Object = Me.Invoke("GetGAVVersionValue", New Object() {strUserID, iGAVNumber})
            Return CType(results(0),String())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetGAVVersionValueAsync(ByVal strUserID As String, ByVal iGAVNumber As Integer)
            Me.GetGAVVersionValueAsync(strUserID, iGAVNumber, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetGAVVersionValueAsync(ByVal strUserID As String, ByVal iGAVNumber As Integer, ByVal userState As Object)
            If (Me.GetGAVVersionValueOperationCompleted Is Nothing) Then
                Me.GetGAVVersionValueOperationCompleted = AddressOf Me.OnGetGAVVersionValueOperationCompleted
            End If
            Me.InvokeAsync("GetGAVVersionValue", New Object() {strUserID, iGAVNumber}, Me.GetGAVVersionValueOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetGAVVersionValueOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetGAVVersionValueCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetGAVVersionValueCompleted(Me, New GetGAVVersionValueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub GetGruppe0ByKantonCompletedEventHandler(ByVal sender As Object, ByVal e As GetGruppe0ByKantonCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetGruppe0ByKantonCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub GetGruppe0ByKanton_DSCompletedEventHandler(ByVal sender As Object, ByVal e As GetGruppe0ByKanton_DSCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetGruppe0ByKanton_DSCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub GetPVLAnhang1BerufeCompletedEventHandler(ByVal sender As Object, ByVal e As GetPVLAnhang1BerufeCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetPVLAnhang1BerufeCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub GetPVLBerufWarningCompletedEventHandler(ByVal sender As Object, ByVal e As GetPVLBerufWarningCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetPVLBerufWarningCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub GetGAVCategoryNames_DSCompletedEventHandler(ByVal sender As Object, ByVal e As GetGAVCategoryNames_DSCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetGAVCategoryNames_DSCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub GetGAVCategoryNamesCompletedEventHandler(ByVal sender As Object, ByVal e As GetGAVCategoryNamesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetGAVCategoryNamesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub GetGAVCategoryValuesCompletedEventHandler(ByVal sender As Object, ByVal e As GetGAVCategoryValuesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetGAVCategoryValuesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub GetGAVCategoryValuesWithLanguageCompletedEventHandler(ByVal sender As Object, ByVal e As GetGAVCategoryValuesWithLanguageCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetGAVCategoryValuesWithLanguageCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub GetGAVCategoryValuesWithBaseValueCompletedEventHandler(ByVal sender As Object, ByVal e As GetGAVCategoryValuesWithBaseValueCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetGAVCategoryValuesWithBaseValueCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub GetGAVCalculationValueCompletedEventHandler(ByVal sender As Object, ByVal e As GetGAVCalculationValueCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetGAVCalculationValueCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub GetGAVCriterionValueCompletedEventHandler(ByVal sender As Object, ByVal e As GetGAVCriterionValueCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetGAVCriterionValueCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub GetGAVCriterionValueByIDCriterionCompletedEventHandler(ByVal sender As Object, ByVal e As GetGAVCriterionValueByIDCriterionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetGAVCriterionValueByIDCriterionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub GetGAVTaxonomyEntryValueCompletedEventHandler(ByVal sender As Object, ByVal e As GetGAVTaxonomyEntryValueCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetGAVTaxonomyEntryValueCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub GetGAVVersionValueCompletedEventHandler(ByVal sender As Object, ByVal e As GetGAVVersionValueCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetGAVVersionValueCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String())
            End Get
        End Property
    End Class
End Namespace
