'------------------------------------------------------------------------------
' <auto-generated>
'     Dieser Code wurde von einem Tool generiert.
'     Laufzeitversion:4.0.30319.42000
'
'     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
'     der Code erneut generiert wird.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'Der Quellcode wurde automatisch mit Microsoft.VSDesigner generiert. Version 4.0.30319.42000.
'
Namespace GAVServices_1
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="ClsGetGAVDataSoap", [Namespace]:="http://asmx.domain.com/spwebservice/SPGAVData.asmx")>  _
    Partial Public Class ClsGetGAVData
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private GetGruppe0ByKantonOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetGruppe0inAllCantonOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetGruppe1ByKantonOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetGruppe2ByKantonOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetGruppe3ByKantonOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetGAVAdressenOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetGAVTextOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetGAVRecByIDOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = Global.SPS.MD.GAVAddressUtility.My.MySettings.Default.SPGAVAdressen_spbl03_ClsGetGAVData
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event GetGruppe0ByKantonCompleted As GetGruppe0ByKantonCompletedEventHandler
        
        '''<remarks/>
        Public Event GetGruppe0inAllCantonCompleted As GetGruppe0inAllCantonCompletedEventHandler
        
        '''<remarks/>
        Public Event GetGruppe1ByKantonCompleted As GetGruppe1ByKantonCompletedEventHandler
        
        '''<remarks/>
        Public Event GetGruppe2ByKantonCompleted As GetGruppe2ByKantonCompletedEventHandler
        
        '''<remarks/>
        Public Event GetGruppe3ByKantonCompleted As GetGruppe3ByKantonCompletedEventHandler
        
        '''<remarks/>
        Public Event GetGAVAdressenCompleted As GetGAVAdressenCompletedEventHandler
        
        '''<remarks/>
        Public Event GetGAVTextCompleted As GetGAVTextCompletedEventHandler
        
        '''<remarks/>
        Public Event GetGAVRecByIDCompleted As GetGAVRecByIDCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://asmx.domain.com/spwebservice/SPGAVData.asmx/GetGruppe0ByKanton", RequestNamespace:="http://asmx.domain.com/spwebservice/SPGAVData.asmx", ResponseNamespace:="http://asmx.domain.com/spwebservice/SPGAVData.asmx", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetGruppe0ByKanton(ByVal strUserID As String, ByVal strGAVKanton As String) As String()
            Dim results() As Object = Me.Invoke("GetGruppe0ByKanton", New Object() {strUserID, strGAVKanton})
            Return CType(results(0),String())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetGruppe0ByKantonAsync(ByVal strUserID As String, ByVal strGAVKanton As String)
            Me.GetGruppe0ByKantonAsync(strUserID, strGAVKanton, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetGruppe0ByKantonAsync(ByVal strUserID As String, ByVal strGAVKanton As String, ByVal userState As Object)
            If (Me.GetGruppe0ByKantonOperationCompleted Is Nothing) Then
                Me.GetGruppe0ByKantonOperationCompleted = AddressOf Me.OnGetGruppe0ByKantonOperationCompleted
            End If
            Me.InvokeAsync("GetGruppe0ByKanton", New Object() {strUserID, strGAVKanton}, Me.GetGruppe0ByKantonOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetGruppe0ByKantonOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetGruppe0ByKantonCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetGruppe0ByKantonCompleted(Me, New GetGruppe0ByKantonCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://asmx.domain.com/spwebservice/SPGAVData.asmx/GetGruppe0inAllCanton", RequestNamespace:="http://asmx.domain.com/spwebservice/SPGAVData.asmx", ResponseNamespace:="http://asmx.domain.com/spwebservice/SPGAVData.asmx", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetGruppe0inAllCanton(ByVal strUserID As String) As String()
            Dim results() As Object = Me.Invoke("GetGruppe0inAllCanton", New Object() {strUserID})
            Return CType(results(0),String())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetGruppe0inAllCantonAsync(ByVal strUserID As String)
            Me.GetGruppe0inAllCantonAsync(strUserID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetGruppe0inAllCantonAsync(ByVal strUserID As String, ByVal userState As Object)
            If (Me.GetGruppe0inAllCantonOperationCompleted Is Nothing) Then
                Me.GetGruppe0inAllCantonOperationCompleted = AddressOf Me.OnGetGruppe0inAllCantonOperationCompleted
            End If
            Me.InvokeAsync("GetGruppe0inAllCanton", New Object() {strUserID}, Me.GetGruppe0inAllCantonOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetGruppe0inAllCantonOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetGruppe0inAllCantonCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetGruppe0inAllCantonCompleted(Me, New GetGruppe0inAllCantonCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://asmx.domain.com/spwebservice/SPGAVData.asmx/GetGruppe1ByKanton", RequestNamespace:="http://asmx.domain.com/spwebservice/SPGAVData.asmx", ResponseNamespace:="http://asmx.domain.com/spwebservice/SPGAVData.asmx", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetGruppe1ByKanton(ByVal strUserID As String, ByVal strGAVKanton As String, ByVal strGAVGruppe0 As String) As String()
            Dim results() As Object = Me.Invoke("GetGruppe1ByKanton", New Object() {strUserID, strGAVKanton, strGAVGruppe0})
            Return CType(results(0),String())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetGruppe1ByKantonAsync(ByVal strUserID As String, ByVal strGAVKanton As String, ByVal strGAVGruppe0 As String)
            Me.GetGruppe1ByKantonAsync(strUserID, strGAVKanton, strGAVGruppe0, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetGruppe1ByKantonAsync(ByVal strUserID As String, ByVal strGAVKanton As String, ByVal strGAVGruppe0 As String, ByVal userState As Object)
            If (Me.GetGruppe1ByKantonOperationCompleted Is Nothing) Then
                Me.GetGruppe1ByKantonOperationCompleted = AddressOf Me.OnGetGruppe1ByKantonOperationCompleted
            End If
            Me.InvokeAsync("GetGruppe1ByKanton", New Object() {strUserID, strGAVKanton, strGAVGruppe0}, Me.GetGruppe1ByKantonOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetGruppe1ByKantonOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetGruppe1ByKantonCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetGruppe1ByKantonCompleted(Me, New GetGruppe1ByKantonCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://asmx.domain.com/spwebservice/SPGAVData.asmx/GetGruppe2ByKanton", RequestNamespace:="http://asmx.domain.com/spwebservice/SPGAVData.asmx", ResponseNamespace:="http://asmx.domain.com/spwebservice/SPGAVData.asmx", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetGruppe2ByKanton(ByVal strUserID As String, ByVal strGAVKanton As String, ByVal strGAVGruppe0 As String, ByVal strGAVGruppe1 As String) As String()
            Dim results() As Object = Me.Invoke("GetGruppe2ByKanton", New Object() {strUserID, strGAVKanton, strGAVGruppe0, strGAVGruppe1})
            Return CType(results(0),String())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetGruppe2ByKantonAsync(ByVal strUserID As String, ByVal strGAVKanton As String, ByVal strGAVGruppe0 As String, ByVal strGAVGruppe1 As String)
            Me.GetGruppe2ByKantonAsync(strUserID, strGAVKanton, strGAVGruppe0, strGAVGruppe1, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetGruppe2ByKantonAsync(ByVal strUserID As String, ByVal strGAVKanton As String, ByVal strGAVGruppe0 As String, ByVal strGAVGruppe1 As String, ByVal userState As Object)
            If (Me.GetGruppe2ByKantonOperationCompleted Is Nothing) Then
                Me.GetGruppe2ByKantonOperationCompleted = AddressOf Me.OnGetGruppe2ByKantonOperationCompleted
            End If
            Me.InvokeAsync("GetGruppe2ByKanton", New Object() {strUserID, strGAVKanton, strGAVGruppe0, strGAVGruppe1}, Me.GetGruppe2ByKantonOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetGruppe2ByKantonOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetGruppe2ByKantonCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetGruppe2ByKantonCompleted(Me, New GetGruppe2ByKantonCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://asmx.domain.com/spwebservice/SPGAVData.asmx/GetGruppe3ByKanton", RequestNamespace:="http://asmx.domain.com/spwebservice/SPGAVData.asmx", ResponseNamespace:="http://asmx.domain.com/spwebservice/SPGAVData.asmx", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetGruppe3ByKanton(ByVal strUserID As String, ByVal strGAVKanton As String, ByVal strGAVGruppe0 As String, ByVal strGAVGruppe1 As String, ByVal strGAVGruppe2 As String) As String()
            Dim results() As Object = Me.Invoke("GetGruppe3ByKanton", New Object() {strUserID, strGAVKanton, strGAVGruppe0, strGAVGruppe1, strGAVGruppe2})
            Return CType(results(0),String())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetGruppe3ByKantonAsync(ByVal strUserID As String, ByVal strGAVKanton As String, ByVal strGAVGruppe0 As String, ByVal strGAVGruppe1 As String, ByVal strGAVGruppe2 As String)
            Me.GetGruppe3ByKantonAsync(strUserID, strGAVKanton, strGAVGruppe0, strGAVGruppe1, strGAVGruppe2, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetGruppe3ByKantonAsync(ByVal strUserID As String, ByVal strGAVKanton As String, ByVal strGAVGruppe0 As String, ByVal strGAVGruppe1 As String, ByVal strGAVGruppe2 As String, ByVal userState As Object)
            If (Me.GetGruppe3ByKantonOperationCompleted Is Nothing) Then
                Me.GetGruppe3ByKantonOperationCompleted = AddressOf Me.OnGetGruppe3ByKantonOperationCompleted
            End If
            Me.InvokeAsync("GetGruppe3ByKanton", New Object() {strUserID, strGAVKanton, strGAVGruppe0, strGAVGruppe1, strGAVGruppe2}, Me.GetGruppe3ByKantonOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetGruppe3ByKantonOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetGruppe3ByKantonCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetGruppe3ByKantonCompleted(Me, New GetGruppe3ByKantonCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://asmx.domain.com/spwebservice/SPGAVData.asmx/GetGAVAdressen", RequestNamespace:="http://asmx.domain.com/spwebservice/SPGAVData.asmx", ResponseNamespace:="http://asmx.domain.com/spwebservice/SPGAVData.asmx", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetGAVAdressen(ByVal strUserID As String, ByVal strGAVKanton As String, ByVal strGAVBeruf As String, ByVal strGAVOrgan As String) As String()
            Dim results() As Object = Me.Invoke("GetGAVAdressen", New Object() {strUserID, strGAVKanton, strGAVBeruf, strGAVOrgan})
            Return CType(results(0),String())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetGAVAdressenAsync(ByVal strUserID As String, ByVal strGAVKanton As String, ByVal strGAVBeruf As String, ByVal strGAVOrgan As String)
            Me.GetGAVAdressenAsync(strUserID, strGAVKanton, strGAVBeruf, strGAVOrgan, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetGAVAdressenAsync(ByVal strUserID As String, ByVal strGAVKanton As String, ByVal strGAVBeruf As String, ByVal strGAVOrgan As String, ByVal userState As Object)
            If (Me.GetGAVAdressenOperationCompleted Is Nothing) Then
                Me.GetGAVAdressenOperationCompleted = AddressOf Me.OnGetGAVAdressenOperationCompleted
            End If
            Me.InvokeAsync("GetGAVAdressen", New Object() {strUserID, strGAVKanton, strGAVBeruf, strGAVOrgan}, Me.GetGAVAdressenOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetGAVAdressenOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetGAVAdressenCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetGAVAdressenCompleted(Me, New GetGAVAdressenCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://asmx.domain.com/spwebservice/SPGAVData.asmx/GetGAVText", RequestNamespace:="http://asmx.domain.com/spwebservice/SPGAVData.asmx", ResponseNamespace:="http://asmx.domain.com/spwebservice/SPGAVData.asmx", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetGAVText(ByVal strUserID As String, ByVal strGAVKanton As String, ByVal strGAVGruppe0 As String, ByVal strGAVGruppe1 As String, ByVal strGAVGruppe2 As String, ByVal strGAVGruppe3 As String) As String()
            Dim results() As Object = Me.Invoke("GetGAVText", New Object() {strUserID, strGAVKanton, strGAVGruppe0, strGAVGruppe1, strGAVGruppe2, strGAVGruppe3})
            Return CType(results(0),String())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetGAVTextAsync(ByVal strUserID As String, ByVal strGAVKanton As String, ByVal strGAVGruppe0 As String, ByVal strGAVGruppe1 As String, ByVal strGAVGruppe2 As String, ByVal strGAVGruppe3 As String)
            Me.GetGAVTextAsync(strUserID, strGAVKanton, strGAVGruppe0, strGAVGruppe1, strGAVGruppe2, strGAVGruppe3, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetGAVTextAsync(ByVal strUserID As String, ByVal strGAVKanton As String, ByVal strGAVGruppe0 As String, ByVal strGAVGruppe1 As String, ByVal strGAVGruppe2 As String, ByVal strGAVGruppe3 As String, ByVal userState As Object)
            If (Me.GetGAVTextOperationCompleted Is Nothing) Then
                Me.GetGAVTextOperationCompleted = AddressOf Me.OnGetGAVTextOperationCompleted
            End If
            Me.InvokeAsync("GetGAVText", New Object() {strUserID, strGAVKanton, strGAVGruppe0, strGAVGruppe1, strGAVGruppe2, strGAVGruppe3}, Me.GetGAVTextOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetGAVTextOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetGAVTextCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetGAVTextCompleted(Me, New GetGAVTextCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://asmx.domain.com/spwebservice/SPGAVData.asmx/GetGAVRecByID", RequestNamespace:="http://asmx.domain.com/spwebservice/SPGAVData.asmx", ResponseNamespace:="http://asmx.domain.com/spwebservice/SPGAVData.asmx", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetGAVRecByID(ByVal strUserID As String, ByVal strGAVKanton As String, ByVal strGAVGruppe0 As String, ByVal strGAVGruppe1 As String, ByVal strGAVGruppe2 As String, ByVal strGAVGruppe3 As String, ByVal strGAVText As String) As String()
            Dim results() As Object = Me.Invoke("GetGAVRecByID", New Object() {strUserID, strGAVKanton, strGAVGruppe0, strGAVGruppe1, strGAVGruppe2, strGAVGruppe3, strGAVText})
            Return CType(results(0),String())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetGAVRecByIDAsync(ByVal strUserID As String, ByVal strGAVKanton As String, ByVal strGAVGruppe0 As String, ByVal strGAVGruppe1 As String, ByVal strGAVGruppe2 As String, ByVal strGAVGruppe3 As String, ByVal strGAVText As String)
            Me.GetGAVRecByIDAsync(strUserID, strGAVKanton, strGAVGruppe0, strGAVGruppe1, strGAVGruppe2, strGAVGruppe3, strGAVText, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetGAVRecByIDAsync(ByVal strUserID As String, ByVal strGAVKanton As String, ByVal strGAVGruppe0 As String, ByVal strGAVGruppe1 As String, ByVal strGAVGruppe2 As String, ByVal strGAVGruppe3 As String, ByVal strGAVText As String, ByVal userState As Object)
            If (Me.GetGAVRecByIDOperationCompleted Is Nothing) Then
                Me.GetGAVRecByIDOperationCompleted = AddressOf Me.OnGetGAVRecByIDOperationCompleted
            End If
            Me.InvokeAsync("GetGAVRecByID", New Object() {strUserID, strGAVKanton, strGAVGruppe0, strGAVGruppe1, strGAVGruppe2, strGAVGruppe3, strGAVText}, Me.GetGAVRecByIDOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetGAVRecByIDOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetGAVRecByIDCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetGAVRecByIDCompleted(Me, New GetGAVRecByIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub GetGruppe0ByKantonCompletedEventHandler(ByVal sender As Object, ByVal e As GetGruppe0ByKantonCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetGruppe0ByKantonCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub GetGruppe0inAllCantonCompletedEventHandler(ByVal sender As Object, ByVal e As GetGruppe0inAllCantonCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetGruppe0inAllCantonCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub GetGruppe1ByKantonCompletedEventHandler(ByVal sender As Object, ByVal e As GetGruppe1ByKantonCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetGruppe1ByKantonCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub GetGruppe2ByKantonCompletedEventHandler(ByVal sender As Object, ByVal e As GetGruppe2ByKantonCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetGruppe2ByKantonCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub GetGruppe3ByKantonCompletedEventHandler(ByVal sender As Object, ByVal e As GetGruppe3ByKantonCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetGruppe3ByKantonCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub GetGAVAdressenCompletedEventHandler(ByVal sender As Object, ByVal e As GetGAVAdressenCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetGAVAdressenCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub GetGAVTextCompletedEventHandler(ByVal sender As Object, ByVal e As GetGAVTextCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetGAVTextCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub GetGAVRecByIDCompletedEventHandler(ByVal sender As Object, ByVal e As GetGAVRecByIDCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetGAVRecByIDCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String())
            End Get
        End Property
    End Class
End Namespace
