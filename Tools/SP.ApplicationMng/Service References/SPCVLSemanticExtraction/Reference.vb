'------------------------------------------------------------------------------
' <auto-generated>
'     Dieser Code wurde von einem Tool generiert.
'     Laufzeitversion:4.0.30319.42000
'
'     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
'     der Code erneut generiert wird.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On


Namespace SPCVLSemanticExtraction
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://servlets.iex.jv.com/")>  _
    Partial Public Class SOAPException
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Private messageField As String
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=0)>  _
        Public Property message() As String
            Get
                Return Me.messageField
            End Get
            Set
                Me.messageField = value
                Me.RaisePropertyChanged("message")
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.ServiceContractAttribute([Namespace]:="http://servlets.iex.jv.com/", ConfigurationName:="SPCVLSemanticExtraction.ISemanticExtraction")>  _
    Public Interface ISemanticExtraction
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://servlets.iex.jv.com/ISemanticExtraction/getContingentRequest", ReplyAction:="http://servlets.iex.jv.com/ISemanticExtraction/getContingentResponse"),  _
         System.ServiceModel.FaultContractAttribute(GetType(SPCVLSemanticExtraction.SOAPException), Action:="http://servlets.iex.jv.com/ISemanticExtraction/getContingent/Fault/SOAPException", Name:="SOAPException"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(Style:=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults:=true)>  _
        Function getContingent(ByVal username As String, ByVal password As String) As <System.ServiceModel.MessageParameterAttribute(Name:="return")> Integer
        
        'CODEGEN: Parameter "inputdata" erfordert zusätzliche Schemainformationen, die nicht mit dem Parametermodus erfasst werden können. Das spezifische Attribut ist "System.Xml.Serialization.XmlElementAttribute".
        <System.ServiceModel.OperationContractAttribute(Action:="http://servlets.iex.jv.com/ISemanticExtraction/extractToXMLRequest", ReplyAction:="http://servlets.iex.jv.com/ISemanticExtraction/extractToXMLResponse"),  _
         System.ServiceModel.FaultContractAttribute(GetType(SPCVLSemanticExtraction.SOAPException), Action:="http://servlets.iex.jv.com/ISemanticExtraction/extractToXML/Fault/SOAPException", Name:="SOAPException"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true)>  _
        Function extractToXML(ByVal request As SPCVLSemanticExtraction.extractToXMLRequest) As <System.ServiceModel.MessageParameterAttribute(Name:="return")> SPCVLSemanticExtraction.extractToXMLResponse
        
        'CODEGEN: Parameter "inputDocument" erfordert zusätzliche Schemainformationen, die nicht mit dem Parametermodus erfasst werden können. Das spezifische Attribut ist "System.Xml.Serialization.XmlArrayAttribute".
        <System.ServiceModel.OperationContractAttribute(Action:="http://servlets.iex.jv.com/ISemanticExtraction/mergeToXMLRequest", ReplyAction:="http://servlets.iex.jv.com/ISemanticExtraction/mergeToXMLResponse"),  _
         System.ServiceModel.FaultContractAttribute(GetType(SPCVLSemanticExtraction.SOAPException), Action:="http://servlets.iex.jv.com/ISemanticExtraction/mergeToXML/Fault/SOAPException", Name:="SOAPException"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true)>  _
        Function mergeToXML(ByVal request As SPCVLSemanticExtraction.mergeToXMLRequest) As <System.ServiceModel.MessageParameterAttribute(Name:="return")> SPCVLSemanticExtraction.mergeToXMLResponse
        
        'CODEGEN: Parameter "return" erfordert zusätzliche Schemainformationen, die nicht mit dem Parametermodus erfasst werden können. Das spezifische Attribut ist "System.Xml.Serialization.XmlArrayAttribute".
        <System.ServiceModel.OperationContractAttribute(Action:="http://servlets.iex.jv.com/ISemanticExtraction/categorizeRequest", ReplyAction:="http://servlets.iex.jv.com/ISemanticExtraction/categorizeResponse"),  _
         System.ServiceModel.FaultContractAttribute(GetType(SPCVLSemanticExtraction.SOAPException), Action:="http://servlets.iex.jv.com/ISemanticExtraction/categorize/Fault/SOAPException", Name:="SOAPException"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true)>  _
        Function categorize(ByVal request As SPCVLSemanticExtraction.categorizeRequest) As <System.ServiceModel.MessageParameterAttribute(Name:="return")> SPCVLSemanticExtraction.categorizeResponse
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://servlets.iex.jv.com/ISemanticExtraction/getXMLDomainsForRequest", ReplyAction:="http://servlets.iex.jv.com/ISemanticExtraction/getXMLDomainsForResponse"),  _
         System.ServiceModel.FaultContractAttribute(GetType(SPCVLSemanticExtraction.SOAPException), Action:="http://servlets.iex.jv.com/ISemanticExtraction/getXMLDomainsFor/Fault/SOAPExcepti"& _ 
            "on", Name:="SOAPException"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(Style:=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults:=true)>  _
        Function getXMLDomainsFor(ByVal language As String) As <System.ServiceModel.MessageParameterAttribute(Name:="return")> String
        
        'CODEGEN: Parameter "return" erfordert zusätzliche Schemainformationen, die nicht mit dem Parametermodus erfasst werden können. Das spezifische Attribut ist "System.Xml.Serialization.XmlElementAttribute".
        <System.ServiceModel.OperationContractAttribute(Action:="http://servlets.iex.jv.com/ISemanticExtraction/extractToTemplateRequest", ReplyAction:="http://servlets.iex.jv.com/ISemanticExtraction/extractToTemplateResponse"),  _
         System.ServiceModel.FaultContractAttribute(GetType(SPCVLSemanticExtraction.SOAPException), Action:="http://servlets.iex.jv.com/ISemanticExtraction/extractToTemplate/Fault/SOAPExcept"& _ 
            "ion", Name:="SOAPException"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true)>  _
        Function extractToTemplate(ByVal request As SPCVLSemanticExtraction.extractToTemplateRequest) As <System.ServiceModel.MessageParameterAttribute(Name:="return")> SPCVLSemanticExtraction.extractToTemplateResponse
        
        'CODEGEN: Parameter "return" erfordert zusätzliche Schemainformationen, die nicht mit dem Parametermodus erfasst werden können. Das spezifische Attribut ist "System.Xml.Serialization.XmlElementAttribute".
        <System.ServiceModel.OperationContractAttribute(Action:="http://servlets.iex.jv.com/ISemanticExtraction/convertToPNGRequest", ReplyAction:="http://servlets.iex.jv.com/ISemanticExtraction/convertToPNGResponse"),  _
         System.ServiceModel.FaultContractAttribute(GetType(SPCVLSemanticExtraction.SOAPException), Action:="http://servlets.iex.jv.com/ISemanticExtraction/convertToPNG/Fault/SOAPException", Name:="SOAPException"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true)>  _
        Function convertToPNG(ByVal request As SPCVLSemanticExtraction.convertToPNGRequest) As <System.ServiceModel.MessageParameterAttribute(Name:="return")> SPCVLSemanticExtraction.convertToPNGResponse
        
        'CODEGEN: Parameter "return" erfordert zusätzliche Schemainformationen, die nicht mit dem Parametermodus erfasst werden können. Das spezifische Attribut ist "System.Xml.Serialization.XmlElementAttribute".
        <System.ServiceModel.OperationContractAttribute(Action:="http://servlets.iex.jv.com/ISemanticExtraction/cutOutSingleOfferRequest", ReplyAction:="http://servlets.iex.jv.com/ISemanticExtraction/cutOutSingleOfferResponse"),  _
         System.ServiceModel.FaultContractAttribute(GetType(SPCVLSemanticExtraction.SOAPException), Action:="http://servlets.iex.jv.com/ISemanticExtraction/cutOutSingleOffer/Fault/SOAPExcept"& _ 
            "ion", Name:="SOAPException"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true)>  _
        Function cutOutSingleOffer(ByVal request As SPCVLSemanticExtraction.cutOutSingleOfferRequest) As <System.ServiceModel.MessageParameterAttribute(Name:="return")> SPCVLSemanticExtraction.cutOutSingleOfferResponse
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://servlets.iex.jv.com/ISemanticExtraction/testRequest", ReplyAction:="http://servlets.iex.jv.com/ISemanticExtraction/testResponse"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(Style:=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults:=true)>  _
        Function test() As <System.ServiceModel.MessageParameterAttribute(Name:="return")> Boolean
    End Interface
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="extractToXML", WrapperNamespace:="http://servlets.iex.jv.com/", IsWrapped:=true)>  _
    Partial Public Class extractToXMLRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=0)>  _
        Public username As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=1)>  _
        Public password As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=2)>  _
        Public language As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=3)>  _
        Public model As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=4),  _
         System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary")>  _
        Public inputdata() As Byte
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=5)>  _
        Public inputdatatype As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal username As String, ByVal password As String, ByVal language As String, ByVal model As String, ByVal inputdata() As Byte, ByVal inputdatatype As String)
            MyBase.New
            Me.username = username
            Me.password = password
            Me.language = language
            Me.model = model
            Me.inputdata = inputdata
            Me.inputdatatype = inputdatatype
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="extractToXMLResponse", WrapperNamespace:="http://servlets.iex.jv.com/", IsWrapped:=true)>  _
    Partial Public Class extractToXMLResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=0)>  _
        Public [return] As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal [return] As String)
            MyBase.New
            Me.[return] = [return]
        End Sub
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://servlets.iex.jv.com/")>  _
    Partial Public Class inputDoc
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Private dataField() As Byte
        
        Private filenameField As String
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType:="base64Binary", Order:=0)>  _
        Public Property data() As Byte()
            Get
                Return Me.dataField
            End Get
            Set
                Me.dataField = value
                Me.RaisePropertyChanged("data")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=1)>  _
        Public Property filename() As String
            Get
                Return Me.filenameField
            End Get
            Set
                Me.filenameField = value
                Me.RaisePropertyChanged("filename")
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="mergeToXML", WrapperNamespace:="http://servlets.iex.jv.com/", IsWrapped:=true)>  _
    Partial Public Class mergeToXMLRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=0)>  _
        Public username As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=1)>  _
        Public password As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=2)>  _
        Public language As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=3)>  _
        Public model As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=4),  _
         System.Xml.Serialization.XmlArrayAttribute(),  _
         System.Xml.Serialization.XmlArrayItemAttribute("item", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public inputDocument() As SPCVLSemanticExtraction.inputDoc
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal username As String, ByVal password As String, ByVal language As String, ByVal model As String, ByVal inputDocument() As SPCVLSemanticExtraction.inputDoc)
            MyBase.New
            Me.username = username
            Me.password = password
            Me.language = language
            Me.model = model
            Me.inputDocument = inputDocument
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="mergeToXMLResponse", WrapperNamespace:="http://servlets.iex.jv.com/", IsWrapped:=true)>  _
    Partial Public Class mergeToXMLResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=0)>  _
        Public [return] As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal [return] As String)
            MyBase.New
            Me.[return] = [return]
        End Sub
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://servlets.iex.jv.com/")>  _
    Partial Public Class outputDoc
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Private dataField() As Byte
        
        Private documentTypeField As String
        
        Private filenameField As String
        
        Private ocrField As Boolean
        
        Private pagesField As Integer
        
        Private plainTextField As String
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType:="base64Binary", Order:=0)>  _
        Public Property data() As Byte()
            Get
                Return Me.dataField
            End Get
            Set
                Me.dataField = value
                Me.RaisePropertyChanged("data")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=1)>  _
        Public Property documentType() As String
            Get
                Return Me.documentTypeField
            End Get
            Set
                Me.documentTypeField = value
                Me.RaisePropertyChanged("documentType")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=2)>  _
        Public Property filename() As String
            Get
                Return Me.filenameField
            End Get
            Set
                Me.filenameField = value
                Me.RaisePropertyChanged("filename")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=3)>  _
        Public Property ocr() As Boolean
            Get
                Return Me.ocrField
            End Get
            Set
                Me.ocrField = value
                Me.RaisePropertyChanged("ocr")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=4)>  _
        Public Property pages() As Integer
            Get
                Return Me.pagesField
            End Get
            Set
                Me.pagesField = value
                Me.RaisePropertyChanged("pages")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=5)>  _
        Public Property plainText() As String
            Get
                Return Me.plainTextField
            End Get
            Set
                Me.plainTextField = value
                Me.RaisePropertyChanged("plainText")
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="categorize", WrapperNamespace:="http://servlets.iex.jv.com/", IsWrapped:=true)>  _
    Partial Public Class categorizeRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=0),  _
         System.Xml.Serialization.XmlArrayAttribute(),  _
         System.Xml.Serialization.XmlArrayItemAttribute("item", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public inputDocument() As SPCVLSemanticExtraction.inputDoc
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=1)>  _
        Public domain As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=2)>  _
        Public username As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=3)>  _
        Public password As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal inputDocument() As SPCVLSemanticExtraction.inputDoc, ByVal domain As String, ByVal username As String, ByVal password As String)
            MyBase.New
            Me.inputDocument = inputDocument
            Me.domain = domain
            Me.username = username
            Me.password = password
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="categorizeResponse", WrapperNamespace:="http://servlets.iex.jv.com/", IsWrapped:=true)>  _
    Partial Public Class categorizeResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=0),  _
         System.Xml.Serialization.XmlArrayAttribute(),  _
         System.Xml.Serialization.XmlArrayItemAttribute("item", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public [return]() As SPCVLSemanticExtraction.outputDoc
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal [return]() As SPCVLSemanticExtraction.outputDoc)
            MyBase.New
            Me.[return] = [return]
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="extractToTemplate", WrapperNamespace:="http://servlets.iex.jv.com/", IsWrapped:=true)>  _
    Partial Public Class extractToTemplateRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=0)>  _
        Public username As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=1)>  _
        Public password As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=2)>  _
        Public language As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=3)>  _
        Public model As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=4),  _
         System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary")>  _
        Public inputdata() As Byte
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=5)>  _
        Public inputdatatype As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=6),  _
         System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary")>  _
        Public documenttemplate() As Byte
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal username As String, ByVal password As String, ByVal language As String, ByVal model As String, ByVal inputdata() As Byte, ByVal inputdatatype As String, ByVal documenttemplate() As Byte)
            MyBase.New
            Me.username = username
            Me.password = password
            Me.language = language
            Me.model = model
            Me.inputdata = inputdata
            Me.inputdatatype = inputdatatype
            Me.documenttemplate = documenttemplate
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="extractToTemplateResponse", WrapperNamespace:="http://servlets.iex.jv.com/", IsWrapped:=true)>  _
    Partial Public Class extractToTemplateResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=0),  _
         System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary")>  _
        Public [return]() As Byte
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal [return]() As Byte)
            MyBase.New
            Me.[return] = [return]
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="convertToPNG", WrapperNamespace:="http://servlets.iex.jv.com/", IsWrapped:=true)>  _
    Partial Public Class convertToPNGRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=0)>  _
        Public sourceFormat As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=1),  _
         System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary")>  _
        Public sourceDocument() As Byte
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=2)>  _
        Public page As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=3)>  _
        Public imageWidth As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=4)>  _
        Public dpi As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=5)>  _
        Public maximumImageWidth As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=6)>  _
        Public imageColorScheme As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=7)>  _
        Public username As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=8)>  _
        Public password As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal sourceFormat As String, ByVal sourceDocument() As Byte, ByVal page As Integer, ByVal imageWidth As Integer, ByVal dpi As Integer, ByVal maximumImageWidth As Integer, ByVal imageColorScheme As String, ByVal username As String, ByVal password As String)
            MyBase.New
            Me.sourceFormat = sourceFormat
            Me.sourceDocument = sourceDocument
            Me.page = page
            Me.imageWidth = imageWidth
            Me.dpi = dpi
            Me.maximumImageWidth = maximumImageWidth
            Me.imageColorScheme = imageColorScheme
            Me.username = username
            Me.password = password
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="convertToPNGResponse", WrapperNamespace:="http://servlets.iex.jv.com/", IsWrapped:=true)>  _
    Partial Public Class convertToPNGResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=0),  _
         System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary")>  _
        Public [return]() As Byte
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal [return]() As Byte)
            MyBase.New
            Me.[return] = [return]
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="cutOutSingleOffer", WrapperNamespace:="http://servlets.iex.jv.com/", IsWrapped:=true)>  _
    Partial Public Class cutOutSingleOfferRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=0)>  _
        Public username As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=1)>  _
        Public password As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=2)>  _
        Public url As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal username As String, ByVal password As String, ByVal url As String)
            MyBase.New
            Me.username = username
            Me.password = password
            Me.url = url
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="cutOutSingleOfferResponse", WrapperNamespace:="http://servlets.iex.jv.com/", IsWrapped:=true)>  _
    Partial Public Class cutOutSingleOfferResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=0),  _
         System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary")>  _
        Public [return]() As Byte
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal [return]() As Byte)
            MyBase.New
            Me.[return] = [return]
        End Sub
    End Class
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")>  _
    Public Interface ISemanticExtractionChannel
        Inherits SPCVLSemanticExtraction.ISemanticExtraction, System.ServiceModel.IClientChannel
    End Interface
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")>  _
    Partial Public Class SemanticExtractionClient
        Inherits System.ServiceModel.ClientBase(Of SPCVLSemanticExtraction.ISemanticExtraction)
        Implements SPCVLSemanticExtraction.ISemanticExtraction
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal endpointConfigurationName As String)
            MyBase.New(endpointConfigurationName)
        End Sub
        
        Public Sub New(ByVal endpointConfigurationName As String, ByVal remoteAddress As String)
            MyBase.New(endpointConfigurationName, remoteAddress)
        End Sub
        
        Public Sub New(ByVal endpointConfigurationName As String, ByVal remoteAddress As System.ServiceModel.EndpointAddress)
            MyBase.New(endpointConfigurationName, remoteAddress)
        End Sub
        
        Public Sub New(ByVal binding As System.ServiceModel.Channels.Binding, ByVal remoteAddress As System.ServiceModel.EndpointAddress)
            MyBase.New(binding, remoteAddress)
        End Sub
        
        Public Function getContingent(ByVal username As String, ByVal password As String) As Integer Implements SPCVLSemanticExtraction.ISemanticExtraction.getContingent
            Return MyBase.Channel.getContingent(username, password)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function SPCVLSemanticExtraction_ISemanticExtraction_extractToXML(ByVal request As SPCVLSemanticExtraction.extractToXMLRequest) As SPCVLSemanticExtraction.extractToXMLResponse Implements SPCVLSemanticExtraction.ISemanticExtraction.extractToXML
            Return MyBase.Channel.extractToXML(request)
        End Function
        
        Public Function extractToXML(ByVal username As String, ByVal password As String, ByVal language As String, ByVal model As String, ByVal inputdata() As Byte, ByVal inputdatatype As String) As String
            Dim inValue As SPCVLSemanticExtraction.extractToXMLRequest = New SPCVLSemanticExtraction.extractToXMLRequest()
            inValue.username = username
            inValue.password = password
            inValue.language = language
            inValue.model = model
            inValue.inputdata = inputdata
            inValue.inputdatatype = inputdatatype
            Dim retVal As SPCVLSemanticExtraction.extractToXMLResponse = CType(Me,SPCVLSemanticExtraction.ISemanticExtraction).extractToXML(inValue)
            Return retVal.[return]
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function SPCVLSemanticExtraction_ISemanticExtraction_mergeToXML(ByVal request As SPCVLSemanticExtraction.mergeToXMLRequest) As SPCVLSemanticExtraction.mergeToXMLResponse Implements SPCVLSemanticExtraction.ISemanticExtraction.mergeToXML
            Return MyBase.Channel.mergeToXML(request)
        End Function
        
        Public Function mergeToXML(ByVal username As String, ByVal password As String, ByVal language As String, ByVal model As String, ByVal inputDocument() As SPCVLSemanticExtraction.inputDoc) As String
            Dim inValue As SPCVLSemanticExtraction.mergeToXMLRequest = New SPCVLSemanticExtraction.mergeToXMLRequest()
            inValue.username = username
            inValue.password = password
            inValue.language = language
            inValue.model = model
            inValue.inputDocument = inputDocument
            Dim retVal As SPCVLSemanticExtraction.mergeToXMLResponse = CType(Me,SPCVLSemanticExtraction.ISemanticExtraction).mergeToXML(inValue)
            Return retVal.[return]
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function SPCVLSemanticExtraction_ISemanticExtraction_categorize(ByVal request As SPCVLSemanticExtraction.categorizeRequest) As SPCVLSemanticExtraction.categorizeResponse Implements SPCVLSemanticExtraction.ISemanticExtraction.categorize
            Return MyBase.Channel.categorize(request)
        End Function
        
        Public Function categorize(ByVal inputDocument() As SPCVLSemanticExtraction.inputDoc, ByVal domain As String, ByVal username As String, ByVal password As String) As SPCVLSemanticExtraction.outputDoc()
            Dim inValue As SPCVLSemanticExtraction.categorizeRequest = New SPCVLSemanticExtraction.categorizeRequest()
            inValue.inputDocument = inputDocument
            inValue.domain = domain
            inValue.username = username
            inValue.password = password
            Dim retVal As SPCVLSemanticExtraction.categorizeResponse = CType(Me,SPCVLSemanticExtraction.ISemanticExtraction).categorize(inValue)
            Return retVal.[return]
        End Function
        
        Public Function getXMLDomainsFor(ByVal language As String) As String Implements SPCVLSemanticExtraction.ISemanticExtraction.getXMLDomainsFor
            Return MyBase.Channel.getXMLDomainsFor(language)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function SPCVLSemanticExtraction_ISemanticExtraction_extractToTemplate(ByVal request As SPCVLSemanticExtraction.extractToTemplateRequest) As SPCVLSemanticExtraction.extractToTemplateResponse Implements SPCVLSemanticExtraction.ISemanticExtraction.extractToTemplate
            Return MyBase.Channel.extractToTemplate(request)
        End Function
        
        Public Function extractToTemplate(ByVal username As String, ByVal password As String, ByVal language As String, ByVal model As String, ByVal inputdata() As Byte, ByVal inputdatatype As String, ByVal documenttemplate() As Byte) As Byte()
            Dim inValue As SPCVLSemanticExtraction.extractToTemplateRequest = New SPCVLSemanticExtraction.extractToTemplateRequest()
            inValue.username = username
            inValue.password = password
            inValue.language = language
            inValue.model = model
            inValue.inputdata = inputdata
            inValue.inputdatatype = inputdatatype
            inValue.documenttemplate = documenttemplate
            Dim retVal As SPCVLSemanticExtraction.extractToTemplateResponse = CType(Me,SPCVLSemanticExtraction.ISemanticExtraction).extractToTemplate(inValue)
            Return retVal.[return]
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function SPCVLSemanticExtraction_ISemanticExtraction_convertToPNG(ByVal request As SPCVLSemanticExtraction.convertToPNGRequest) As SPCVLSemanticExtraction.convertToPNGResponse Implements SPCVLSemanticExtraction.ISemanticExtraction.convertToPNG
            Return MyBase.Channel.convertToPNG(request)
        End Function
        
        Public Function convertToPNG(ByVal sourceFormat As String, ByVal sourceDocument() As Byte, ByVal page As Integer, ByVal imageWidth As Integer, ByVal dpi As Integer, ByVal maximumImageWidth As Integer, ByVal imageColorScheme As String, ByVal username As String, ByVal password As String) As Byte()
            Dim inValue As SPCVLSemanticExtraction.convertToPNGRequest = New SPCVLSemanticExtraction.convertToPNGRequest()
            inValue.sourceFormat = sourceFormat
            inValue.sourceDocument = sourceDocument
            inValue.page = page
            inValue.imageWidth = imageWidth
            inValue.dpi = dpi
            inValue.maximumImageWidth = maximumImageWidth
            inValue.imageColorScheme = imageColorScheme
            inValue.username = username
            inValue.password = password
            Dim retVal As SPCVLSemanticExtraction.convertToPNGResponse = CType(Me,SPCVLSemanticExtraction.ISemanticExtraction).convertToPNG(inValue)
            Return retVal.[return]
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function SPCVLSemanticExtraction_ISemanticExtraction_cutOutSingleOffer(ByVal request As SPCVLSemanticExtraction.cutOutSingleOfferRequest) As SPCVLSemanticExtraction.cutOutSingleOfferResponse Implements SPCVLSemanticExtraction.ISemanticExtraction.cutOutSingleOffer
            Return MyBase.Channel.cutOutSingleOffer(request)
        End Function
        
        Public Function cutOutSingleOffer(ByVal username As String, ByVal password As String, ByVal url As String) As Byte()
            Dim inValue As SPCVLSemanticExtraction.cutOutSingleOfferRequest = New SPCVLSemanticExtraction.cutOutSingleOfferRequest()
            inValue.username = username
            inValue.password = password
            inValue.url = url
            Dim retVal As SPCVLSemanticExtraction.cutOutSingleOfferResponse = CType(Me,SPCVLSemanticExtraction.ISemanticExtraction).cutOutSingleOffer(inValue)
            Return retVal.[return]
        End Function
        
        Public Function test() As Boolean Implements SPCVLSemanticExtraction.ISemanticExtraction.test
            Return MyBase.Channel.test
        End Function
    End Class
End Namespace
