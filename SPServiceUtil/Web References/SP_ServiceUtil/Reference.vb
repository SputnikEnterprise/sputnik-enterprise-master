'------------------------------------------------------------------------------
' <auto-generated>
'     Dieser Code wurde von einem Tool generiert.
'     Laufzeitversion:4.0.30319.42000
'
'     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
'     der Code erneut generiert wird.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Data
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'Der Quellcode wurde automatisch mit Microsoft.VSDesigner generiert. Version 4.0.30319.42000.
'
Namespace SP_ServiceUtil
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="SPServiceUtilSoap", [Namespace]:="http://asmx.domain.com/spgav_services/SPServiceUtil.asmx")>  _
    Partial Public Class SPServiceUtil
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private SaveUserData2WSDbOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetQstDataOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetCountrylistOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetBankDataOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetJobDataOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = Global.SPServiceUtil.My.MySettings.Default.SP_ServiceUtil_SP_ServiceUtil_SPServiceUtil
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event SaveUserData2WSDbCompleted As SaveUserData2WSDbCompletedEventHandler
        
        '''<remarks/>
        Public Event GetQstDataCompleted As GetQstDataCompletedEventHandler
        
        '''<remarks/>
        Public Event GetCountrylistCompleted As GetCountrylistCompletedEventHandler
        
        '''<remarks/>
        Public Event GetBankDataCompleted As GetBankDataCompletedEventHandler
        
        '''<remarks/>
        Public Event GetJobDataCompleted As GetJobDataCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://asmx.domain.com/spgav_services/SPServiceUtil.asmx/SaveUserData2WSDb", RequestNamespace:="http://asmx.domain.com/spgav_services/SPServiceUtil.asmx", ResponseNamespace:="http://asmx.domain.com/spgav_services/SPServiceUtil.asmx", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function SaveUserData2WSDb(ByVal strUserData As String) As String
            Dim results() As Object = Me.Invoke("SaveUserData2WSDb", New Object() {strUserData})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub SaveUserData2WSDbAsync(ByVal strUserData As String)
            Me.SaveUserData2WSDbAsync(strUserData, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SaveUserData2WSDbAsync(ByVal strUserData As String, ByVal userState As Object)
            If (Me.SaveUserData2WSDbOperationCompleted Is Nothing) Then
                Me.SaveUserData2WSDbOperationCompleted = AddressOf Me.OnSaveUserData2WSDbOperationCompleted
            End If
            Me.InvokeAsync("SaveUserData2WSDb", New Object() {strUserData}, Me.SaveUserData2WSDbOperationCompleted, userState)
        End Sub
        
        Private Sub OnSaveUserData2WSDbOperationCompleted(ByVal arg As Object)
            If (Not (Me.SaveUserData2WSDbCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SaveUserData2WSDbCompleted(Me, New SaveUserData2WSDbCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://asmx.domain.com/spgav_services/SPServiceUtil.asmx/GetQstData", RequestNamespace:="http://asmx.domain.com/spgav_services/SPServiceUtil.asmx", ResponseNamespace:="http://asmx.domain.com/spgav_services/SPServiceUtil.asmx", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetQstData(ByVal strUserID As String, ByVal strKanton As String, ByVal iYear As Integer, ByVal cEinkommen As Double, ByVal iKinder As Integer, ByVal strGruppe As String, ByVal strGeschlecht As String) As String
            Dim results() As Object = Me.Invoke("GetQstData", New Object() {strUserID, strKanton, iYear, cEinkommen, iKinder, strGruppe, strGeschlecht})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetQstDataAsync(ByVal strUserID As String, ByVal strKanton As String, ByVal iYear As Integer, ByVal cEinkommen As Double, ByVal iKinder As Integer, ByVal strGruppe As String, ByVal strGeschlecht As String)
            Me.GetQstDataAsync(strUserID, strKanton, iYear, cEinkommen, iKinder, strGruppe, strGeschlecht, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetQstDataAsync(ByVal strUserID As String, ByVal strKanton As String, ByVal iYear As Integer, ByVal cEinkommen As Double, ByVal iKinder As Integer, ByVal strGruppe As String, ByVal strGeschlecht As String, ByVal userState As Object)
            If (Me.GetQstDataOperationCompleted Is Nothing) Then
                Me.GetQstDataOperationCompleted = AddressOf Me.OnGetQstDataOperationCompleted
            End If
            Me.InvokeAsync("GetQstData", New Object() {strUserID, strKanton, iYear, cEinkommen, iKinder, strGruppe, strGeschlecht}, Me.GetQstDataOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetQstDataOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetQstDataCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetQstDataCompleted(Me, New GetQstDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://asmx.domain.com/spgav_services/SPServiceUtil.asmx/GetCountrylist", RequestNamespace:="http://asmx.domain.com/spgav_services/SPServiceUtil.asmx", ResponseNamespace:="http://asmx.domain.com/spgav_services/SPServiceUtil.asmx", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetCountrylist(ByVal strUserID As String, ByVal strCountryCode As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetCountrylist", New Object() {strUserID, strCountryCode})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetCountrylistAsync(ByVal strUserID As String, ByVal strCountryCode As String)
            Me.GetCountrylistAsync(strUserID, strCountryCode, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetCountrylistAsync(ByVal strUserID As String, ByVal strCountryCode As String, ByVal userState As Object)
            If (Me.GetCountrylistOperationCompleted Is Nothing) Then
                Me.GetCountrylistOperationCompleted = AddressOf Me.OnGetCountrylistOperationCompleted
            End If
            Me.InvokeAsync("GetCountrylist", New Object() {strUserID, strCountryCode}, Me.GetCountrylistOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetCountrylistOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetCountrylistCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetCountrylistCompleted(Me, New GetCountrylistCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://asmx.domain.com/spgav_services/SPServiceUtil.asmx/GetBankData", RequestNamespace:="http://asmx.domain.com/spgav_services/SPServiceUtil.asmx", ResponseNamespace:="http://asmx.domain.com/spgav_services/SPServiceUtil.asmx", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetBankData(ByVal strUserID As String, ByVal strBCNr As String, ByVal iYear As Integer, ByVal cEinkommen As Double, ByVal iKinder As Integer, ByVal strGruppe As String, ByVal strGeschlecht As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetBankData", New Object() {strUserID, strBCNr, iYear, cEinkommen, iKinder, strGruppe, strGeschlecht})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetBankDataAsync(ByVal strUserID As String, ByVal strBCNr As String, ByVal iYear As Integer, ByVal cEinkommen As Double, ByVal iKinder As Integer, ByVal strGruppe As String, ByVal strGeschlecht As String)
            Me.GetBankDataAsync(strUserID, strBCNr, iYear, cEinkommen, iKinder, strGruppe, strGeschlecht, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetBankDataAsync(ByVal strUserID As String, ByVal strBCNr As String, ByVal iYear As Integer, ByVal cEinkommen As Double, ByVal iKinder As Integer, ByVal strGruppe As String, ByVal strGeschlecht As String, ByVal userState As Object)
            If (Me.GetBankDataOperationCompleted Is Nothing) Then
                Me.GetBankDataOperationCompleted = AddressOf Me.OnGetBankDataOperationCompleted
            End If
            Me.InvokeAsync("GetBankData", New Object() {strUserID, strBCNr, iYear, cEinkommen, iKinder, strGruppe, strGeschlecht}, Me.GetBankDataOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetBankDataOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetBankDataCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetBankDataCompleted(Me, New GetBankDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://asmx.domain.com/spgav_services/SPServiceUtil.asmx/GetJobData", RequestNamespace:="http://asmx.domain.com/spgav_services/SPServiceUtil.asmx", ResponseNamespace:="http://asmx.domain.com/spgav_services/SPServiceUtil.asmx", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetJobData(ByVal strUserID As String, ByVal strLanguage As String, ByVal strGeschlecht As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetJobData", New Object() {strUserID, strLanguage, strGeschlecht})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetJobDataAsync(ByVal strUserID As String, ByVal strLanguage As String, ByVal strGeschlecht As String)
            Me.GetJobDataAsync(strUserID, strLanguage, strGeschlecht, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetJobDataAsync(ByVal strUserID As String, ByVal strLanguage As String, ByVal strGeschlecht As String, ByVal userState As Object)
            If (Me.GetJobDataOperationCompleted Is Nothing) Then
                Me.GetJobDataOperationCompleted = AddressOf Me.OnGetJobDataOperationCompleted
            End If
            Me.InvokeAsync("GetJobData", New Object() {strUserID, strLanguage, strGeschlecht}, Me.GetJobDataOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetJobDataOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetJobDataCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetJobDataCompleted(Me, New GetJobDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub SaveUserData2WSDbCompletedEventHandler(ByVal sender As Object, ByVal e As SaveUserData2WSDbCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SaveUserData2WSDbCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub GetQstDataCompletedEventHandler(ByVal sender As Object, ByVal e As GetQstDataCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetQstDataCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub GetCountrylistCompletedEventHandler(ByVal sender As Object, ByVal e As GetCountrylistCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetCountrylistCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub GetBankDataCompletedEventHandler(ByVal sender As Object, ByVal e As GetBankDataCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetBankDataCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub GetJobDataCompletedEventHandler(ByVal sender As Object, ByVal e As GetJobDataCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetJobDataCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
End Namespace
